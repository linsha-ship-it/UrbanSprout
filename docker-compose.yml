version: '3.8'

services:
  # MongoDB Database Service
  mongodb:
    image: mongo:7.0
    container_name: urbansprout-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: urbansprout
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - urbansprout-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: urbansprout-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - urbansprout-network
    command: redis-server --appendonly yes

  # Backend API Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: urbansprout-backend
    restart: always
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://urbansprout:urbansprout123@mongodb:27017/urbansprout?authSource=urbansprout
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 5001
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - urbansprout-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service (optional)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: urbansprout-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5001/api
    networks:
      - urbansprout-network
    depends_on:
      - backend

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  urbansprout-network:
    driver: bridge




